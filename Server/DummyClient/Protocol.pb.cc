// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Protocol.proto
// Protobuf C++ Version: 6.30.2

#include "Protocol.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Protocol {

inline constexpr BuffData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        victims_{},
        _victims_cached_byte_size_{0},
        buffid_{::uint64_t{0u}},
        remaintime_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BuffData::BuffData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BuffData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BuffDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuffDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuffDataDefaultTypeInternal() {}
  union {
    BuffData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuffDataDefaultTypeInternal _BuffData_default_instance_;

inline constexpr S_TEST::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        buffs_{},
        id_{::uint64_t{0u}},
        hp_{0u},
        attack_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR S_TEST::S_TEST(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(S_TEST_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S_TESTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_TESTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_TESTDefaultTypeInternal() {}
  union {
    S_TEST _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_TESTDefaultTypeInternal _S_TEST_default_instance_;
}  // namespace Protocol
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_Protocol_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_Protocol_2eproto = nullptr;
const ::uint32_t
    TableStruct_Protocol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Protocol::BuffData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Protocol::BuffData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Protocol::BuffData, _impl_.buffid_),
        PROTOBUF_FIELD_OFFSET(::Protocol::BuffData, _impl_.remaintime_),
        PROTOBUF_FIELD_OFFSET(::Protocol::BuffData, _impl_.victims_),
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _impl_.hp_),
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _impl_.attack_),
        PROTOBUF_FIELD_OFFSET(::Protocol::S_TEST, _impl_.buffs_),
        0,
        1,
        2,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::Protocol::BuffData)},
        {14, 26, -1, sizeof(::Protocol::S_TEST)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::Protocol::_BuffData_default_instance_._instance,
    &::Protocol::_S_TEST_default_instance_._instance,
};
const char descriptor_table_protodef_Protocol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016Protocol.proto\022\010Protocol\"\?\n\010BuffData\022\016"
    "\n\006buffId\030\001 \001(\004\022\022\n\nremainTime\030\002 \001(\002\022\017\n\007vi"
    "ctims\030\003 \003(\004\"S\n\006S_TEST\022\n\n\002id\030\001 \001(\004\022\n\n\002hp\030"
    "\002 \001(\r\022\016\n\006attack\030\003 \001(\r\022!\n\005buffs\030\004 \003(\0132\022.P"
    "rotocol.BuffDatab\006proto3"
};
static ::absl::once_flag descriptor_table_Protocol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_Protocol_2eproto = {
    false,
    false,
    184,
    descriptor_table_protodef_Protocol_2eproto,
    "Protocol.proto",
    &descriptor_table_Protocol_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_Protocol_2eproto::offsets,
    file_level_enum_descriptors_Protocol_2eproto,
    file_level_service_descriptors_Protocol_2eproto,
};
namespace Protocol {
// ===================================================================

class BuffData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BuffData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BuffData, _impl_._has_bits_);
};

BuffData::BuffData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BuffData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.BuffData)
}
PROTOBUF_NDEBUG_INLINE BuffData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::Protocol::BuffData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        victims_{visibility, arena, from.victims_},
        _victims_cached_byte_size_{0} {}

BuffData::BuffData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BuffData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BuffData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BuffData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buffid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, buffid_),
           offsetof(Impl_, remaintime_) -
               offsetof(Impl_, buffid_) +
               sizeof(Impl_::remaintime_));

  // @@protoc_insertion_point(copy_constructor:Protocol.BuffData)
}
PROTOBUF_NDEBUG_INLINE BuffData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        victims_{visibility, arena},
        _victims_cached_byte_size_{0} {}

inline void BuffData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buffid_),
           0,
           offsetof(Impl_, remaintime_) -
               offsetof(Impl_, buffid_) +
               sizeof(Impl_::remaintime_));
}
BuffData::~BuffData() {
  // @@protoc_insertion_point(destructor:Protocol.BuffData)
  SharedDtor(*this);
}
inline void BuffData::SharedDtor(MessageLite& self) {
  BuffData& this_ = static_cast<BuffData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BuffData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BuffData(arena);
}
constexpr auto BuffData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BuffData, _impl_.victims_) +
          decltype(BuffData::_impl_.victims_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BuffData), alignof(BuffData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BuffData::PlacementNew_,
                                 sizeof(BuffData),
                                 alignof(BuffData));
  }
}
constexpr auto BuffData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BuffData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BuffData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BuffData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BuffData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BuffData>(), &BuffData::ByteSizeLong,
              &BuffData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BuffData, _impl_._cached_size_),
          false,
      },
      &BuffData::kDescriptorMethods,
      &descriptor_table_Protocol_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BuffData_class_data_ =
        BuffData::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL BuffData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BuffData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BuffData_class_data_.tc_table);
  return BuffData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
BuffData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BuffData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BuffData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Protocol::BuffData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 buffId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BuffData, _impl_.buffid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(BuffData, _impl_.buffid_)}},
    // float remainTime = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(BuffData, _impl_.remaintime_)}},
    // repeated uint64 victims = 3;
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BuffData, _impl_.victims_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 buffId = 1;
    {PROTOBUF_FIELD_OFFSET(BuffData, _impl_.buffid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // float remainTime = 2;
    {PROTOBUF_FIELD_OFFSET(BuffData, _impl_.remaintime_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated uint64 victims = 3;
    {PROTOBUF_FIELD_OFFSET(BuffData, _impl_.victims_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void BuffData::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.BuffData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.victims_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.buffid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.remaintime_) -
        reinterpret_cast<char*>(&_impl_.buffid_)) + sizeof(_impl_.remaintime_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BuffData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BuffData& this_ = static_cast<const BuffData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BuffData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BuffData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.BuffData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 buffId = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_buffid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_buffid(), target);
    }
  }

  // float remainTime = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_remaintime()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_remaintime(), target);
    }
  }

  // repeated uint64 victims = 3;
  {
    int byte_size = this_._impl_._victims_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, this_._internal_victims(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.BuffData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BuffData::ByteSizeLong(const MessageLite& base) {
  const BuffData& this_ = static_cast<const BuffData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BuffData::ByteSizeLong() const {
  const BuffData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Protocol.BuffData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint64 victims = 3;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
              this_._internal_victims(), 1,
              this_._impl_._victims_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint64 buffId = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_buffid() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_buffid());
      }
    }
    // float remainTime = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_remaintime()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BuffData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BuffData*>(&to_msg);
  auto& from = static_cast<const BuffData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.BuffData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_victims()->MergeFrom(from._internal_victims());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_buffid() != 0) {
        _this->_impl_.buffid_ = from._impl_.buffid_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_remaintime()) != 0) {
        _this->_impl_.remaintime_ = from._impl_.remaintime_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BuffData::CopyFrom(const BuffData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.BuffData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BuffData::InternalSwap(BuffData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.victims_.InternalSwap(&other->_impl_.victims_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BuffData, _impl_.remaintime_)
      + sizeof(BuffData::_impl_.remaintime_)
      - PROTOBUF_FIELD_OFFSET(BuffData, _impl_.buffid_)>(
          reinterpret_cast<char*>(&_impl_.buffid_),
          reinterpret_cast<char*>(&other->_impl_.buffid_));
}

::google::protobuf::Metadata BuffData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S_TEST::_Internal {
 public:
  using HasBits =
      decltype(std::declval<S_TEST>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(S_TEST, _impl_._has_bits_);
};

S_TEST::S_TEST(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, S_TEST_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Protocol.S_TEST)
}
PROTOBUF_NDEBUG_INLINE S_TEST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::Protocol::S_TEST& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        buffs_{visibility, arena, from.buffs_} {}

S_TEST::S_TEST(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const S_TEST& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, S_TEST_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S_TEST* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, attack_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::attack_));

  // @@protoc_insertion_point(copy_constructor:Protocol.S_TEST)
}
PROTOBUF_NDEBUG_INLINE S_TEST::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        buffs_{visibility, arena} {}

inline void S_TEST::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, attack_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::attack_));
}
S_TEST::~S_TEST() {
  // @@protoc_insertion_point(destructor:Protocol.S_TEST)
  SharedDtor(*this);
}
inline void S_TEST::SharedDtor(MessageLite& self) {
  S_TEST& this_ = static_cast<S_TEST&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL S_TEST::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) S_TEST(arena);
}
constexpr auto S_TEST::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.buffs_) +
          decltype(S_TEST::_impl_.buffs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(S_TEST), alignof(S_TEST), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&S_TEST::PlacementNew_,
                                 sizeof(S_TEST),
                                 alignof(S_TEST));
  }
}
constexpr auto S_TEST::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_S_TEST_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &S_TEST::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<S_TEST>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &S_TEST::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<S_TEST>(), &S_TEST::ByteSizeLong,
              &S_TEST::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(S_TEST, _impl_._cached_size_),
          false,
      },
      &S_TEST::kDescriptorMethods,
      &descriptor_table_Protocol_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull S_TEST_class_data_ =
        S_TEST::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL S_TEST::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&S_TEST_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(S_TEST_class_data_.tc_table);
  return S_TEST_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
S_TEST::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(S_TEST, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    S_TEST_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Protocol::S_TEST>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Protocol.BuffData buffs = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.buffs_)}},
    // uint64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(S_TEST, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.id_)}},
    // uint32 hp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S_TEST, _impl_.hp_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.hp_)}},
    // uint32 attack = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S_TEST, _impl_.attack_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.attack_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1;
    {PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint32 hp = 2;
    {PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.hp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 attack = 3;
    {PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.attack_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .Protocol.BuffData buffs = 4;
    {PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.buffs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::Protocol::BuffData>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void S_TEST::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.S_TEST)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.buffs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.attack_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.attack_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL S_TEST::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const S_TEST& this_ = static_cast<const S_TEST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL S_TEST::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const S_TEST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.S_TEST)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_id(), target);
    }
  }

  // uint32 hp = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_hp() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_hp(), target);
    }
  }

  // uint32 attack = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_attack() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_attack(), target);
    }
  }

  // repeated .Protocol.BuffData buffs = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_buffs_size());
       i < n; i++) {
    const auto& repfield = this_._internal_buffs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.S_TEST)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t S_TEST::ByteSizeLong(const MessageLite& base) {
  const S_TEST& this_ = static_cast<const S_TEST&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t S_TEST::ByteSizeLong() const {
  const S_TEST& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:Protocol.S_TEST)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .Protocol.BuffData buffs = 4;
    {
      total_size += 1UL * this_._internal_buffs_size();
      for (const auto& msg : this_._internal_buffs()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // uint64 id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_id());
      }
    }
    // uint32 hp = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_hp() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_hp());
      }
    }
    // uint32 attack = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_attack() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_attack());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void S_TEST::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S_TEST*>(&to_msg);
  auto& from = static_cast<const S_TEST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.S_TEST)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_buffs()->MergeFrom(
      from._internal_buffs());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_hp() != 0) {
        _this->_impl_.hp_ = from._impl_.hp_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_attack() != 0) {
        _this->_impl_.attack_ = from._impl_.attack_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S_TEST::CopyFrom(const S_TEST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.S_TEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S_TEST::InternalSwap(S_TEST* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.buffs_.InternalSwap(&other->_impl_.buffs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.attack_)
      + sizeof(S_TEST::_impl_.attack_)
      - PROTOBUF_FIELD_OFFSET(S_TEST, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata S_TEST::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_Protocol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
